
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#define HOST_OS 1
#include "../zmk-nodefree-config/helper.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/international_chars/danish.dtsi"

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3             &kp N4  &kp N5                 &tog 3                                                                                    &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E              &kp R   &kp T                  &none                                                                                &kp PG_UP   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D              &kp F   &kp G                  &mo 4                 &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &kp PG_DN   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C              &kp V   &kp B                                                   &kp HOME                    &kp END                             &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
 &kp LCTRL  &kp GRAVE  &kp CAPS  &kp LEFT  &lt 2 RIGHT_ARROW                    &lt 1 SPACE  &mt LEFT_SHIFT BACKSPACE  &kp LGUI                  &kp PG_DN  &kp ENTER  &mt RCTRL TAB          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_Symbols {
            bindings = <
 &kp F1          &kp F2             &kp F3            &kp F4             &kp F5       &kp F6            &kp F7                                                   &trans     &kp F7          &kp F8           &kp F9               &kp F10                &kp F11  &kp F12
 &trans        &kp EXCL             &kp AT          &kp HASH         &kp DOLLAR  &kp PERCENT            &trans                                                   &trans  &kp CARET   &kp AMPERSAND     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &trans
 &trans  &kp APOSTROPHE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET       &trans            &trans  &trans  &trans                  &trans  &trans   &trans     &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE                &trans                 &trans   &trans
 &trans          &trans             &trans            &trans             &trans       &trans                            &trans                  &trans                      &trans          &trans           &trans                &trans                 &trans   &trans
 &trans          &trans             &trans            &trans             &trans                         &trans  &trans  &trans                  &trans  &trans  &kp DEL                     &trans           &trans                &trans                 &trans   &trans
            >;
        };

        layer_Special {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans     &trans          &trans          &trans           &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &kp PG_UP        &kp HOME    &kp UP_ARROW          &kp END  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp PG_DN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                     &trans          &trans          &trans           &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                     &trans          &trans           &trans  &trans  &trans
            >;
        };

        layer_Keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &kp KP_NUMLOCK  &kp KP_EQUAL    &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans       &kp KP_N7     &kp KP_N8        &kp KP_N9     &kp KP_MINUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans       &kp KP_N4     &kp KP_N5        &kp KP_N6      &kp KP_PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans       &kp KP_N1     &kp KP_N2  &kp KP_NUMBER_3     &kp KP_ENTER  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans               &kp KP_N0     &kp KP_N0       &kp KP_DOT     &kp KP_ENTER  &trans
            >;
        };

        layer_Norwegian {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &dk_aa
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &dk_ae  &dk_oe
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
