/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <22 23>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <32 31>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        btick {
            bindings = <&kp GRAVE>;
            key-positions = <29 47>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        singleq {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <30 48>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        exclamation {
            bindings = <&kp EXCL>;
            key-positions = <49 31>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        doubleq {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <32 50>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        alpha {
            bindings = <&kp AT>;
            key-positions = <16 30>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <17 31>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <18 32>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <19 33>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        carot {
            bindings = <&kp CARET>;
            key-positions = <22 40>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        amp {
            bindings = <&kp AMPERSAND>;
            key-positions = <23 41>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <24 42>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <55 56>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <23 24>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <42 56>;
            require-prior-idle-ms = <150>;
            layers = <0 1 2>;
        };

        bslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <44 58>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <33 51>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16 17>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <41 42>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <42 43>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <48 49>;
            require-prior-idle-ms = <120>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <49 50>;
            require-prior-idle-ms = <120>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <17 18>;
            require-prior-idle-ms = <120>;
        };

        delete_left {
            bindings = <&kp DELETE>;
            key-positions = <18 19>;
        };

        enter_right {
            bindings = <&kp ENTER>;
            key-positions = <43 44>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&trans      &kp N1            &kp N2          &kp N3      &kp N4  &kp N5  &trans                                                          &mo 3         &kp N6  &kp N7  &kp N8          &kp N9           &kp N0                &trans
&kp TAB     &kp Q             &kp W           &kp E       &kp R   &kp T   &none                                                           &none         &kp Y   &kp U   &kp I           &kp O            &kp P                 &trans
&kp ESCAPE  &hm LEFT_SHIFT A  &kp S           &kp D       &kp F   &kp G   &none            &trans     &trans      &trans  &trans          &none         &kp H   &kp J   &kp K           &kp L            &hm RSHIFT SEMICOLON  &trans
&kp LSHIFT  &hm LCTRL Z       &hm LEFT_GUI X  &hm LALT C  &kp V   &kp B                               &trans      &trans                                &kp N   &kp M   &hm RALT COMMA  &hm RGUI PERIOD  &hm RCTRL SLASH       &trans
&kp LCTRL   &trans            &trans          &trans      &trans          &lt 1 BACKSPACE  &kp SPACE  &trans      &trans  &kp LEFT_SHIFT  &lt 2 ESCAPE          &trans  &trans          &trans           &trans                &kp PRINTSCREEN
            >;
        };

        symbols {
            bindings = <
&trans  &kp F1         &kp F2             &kp F3            &kp F4             &kp F5       &trans                                      &trans  &kp F6     &kp F7                &kp F8                 &kp F9           &kp F10         &kp F11
&trans  &kp EXCL       &kp AT             &kp HASH          &kp DOLLAR         &kp PERCENT  &trans                                      &trans  &kp CARET  &kp AMPERSAND         &kp ASTERISK           &kp PAUSE_BREAK  &kp INSERT      &kp F12
&trans  &kp BACKSLASH  &kp PIPE           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL    &none   &trans  &trans      &trans  &trans  &none   &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans           &kp SCROLLLOCK  &trans
&trans  &kp APOS       &kp DOUBLE_QUOTES  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PLUS                     &trans      &trans                  &kp UNDER  &kp LESS_THAN         &kp GREATER_THAN       &trans           &kp QUESTION    &trans
&trans  &trans         &trans             &trans            &trans                          &trans  &trans  &trans      &trans  &trans  &trans             &trans                &trans                 &trans           &trans          &trans
            >;
        };

        navnum {
            bindings = <
&trans  &trans  &trans             &trans      &trans        &trans  &trans                                      &trans  &trans          &trans         &trans        &trans     &trans  &trans
&trans  &kp N1  &kp N2             &kp N3      &kp N4        &kp N5  &trans                                      &trans  &kp N6          &kp N7         &kp N8        &kp N9     &kp N0  &trans
&trans  &trans  &kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOL_UP  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &sl 4   &trans
&trans  &trans  &trans             &trans      &trans        &trans                  &trans      &trans                  &kp HOME        &kp PAGE_DOWN  &kp PG_UP     &kp END    &trans  &trans
&trans  &trans  &trans             &trans      &trans                &trans  &trans  &trans      &trans  &trans  &trans                  &trans         &trans        &trans     &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans                                      &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };
    };
};
